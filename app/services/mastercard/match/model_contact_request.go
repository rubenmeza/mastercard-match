/*
 * MATCH API
 *
 * Helps acquirers identify potentially high-risk merchants before entering to a merchant agreement.
 *
 * API version: 1.0.0
 * Contact: apisupport@mastercard.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package match

import (
	"encoding/json"
)

// ContactRequest struct for ContactRequest
type ContactRequest struct {
	// The acquiring bank ICA number whose contact information is to be fetched.
	AcquirerId string `json:"AcquirerId"`
}

// NewContactRequest instantiates a new ContactRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContactRequest(acquirerId string) *ContactRequest {
	this := ContactRequest{}
	this.AcquirerId = acquirerId
	return &this
}

// NewContactRequestWithDefaults instantiates a new ContactRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContactRequestWithDefaults() *ContactRequest {
	this := ContactRequest{}
	return &this
}

// GetAcquirerId returns the AcquirerId field value
func (o *ContactRequest) GetAcquirerId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AcquirerId
}

// GetAcquirerIdOk returns a tuple with the AcquirerId field value
// and a boolean to check if the value has been set.
func (o *ContactRequest) GetAcquirerIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AcquirerId, true
}

// SetAcquirerId sets field value
func (o *ContactRequest) SetAcquirerId(v string) {
	o.AcquirerId = v
}

func (o ContactRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["AcquirerId"] = o.AcquirerId
	}
	return json.Marshal(toSerialize)
}

type NullableContactRequest struct {
	value *ContactRequest
	isSet bool
}

func (v NullableContactRequest) Get() *ContactRequest {
	return v.value
}

func (v *NullableContactRequest) Set(val *ContactRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableContactRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableContactRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContactRequest(val *ContactRequest) *NullableContactRequest {
	return &NullableContactRequest{value: val, isSet: true}
}

func (v NullableContactRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContactRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


