/*
 * MATCH API
 *
 * Helps acquirers identify potentially high-risk merchants before entering to a merchant agreement.
 *
 * API version: 1.0.0
 * Contact: apisupport@mastercard.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package match

import (
	"encoding/json"
)

// AddMerchantResponse struct for AddMerchantResponse
type AddMerchantResponse struct {
	// A number assigned by the MATCH system to uniquely identify the newly added merchant. Return of this number indicates a successful add.
	MerchantReferenceNumber *string `json:"MerchantReferenceNumber,omitempty"`
	// Name of the merchant that was added to the MATCH system as verification of what was added.
	Name *string `json:"Name,omitempty"`
}

// NewAddMerchantResponse instantiates a new AddMerchantResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddMerchantResponse() *AddMerchantResponse {
	this := AddMerchantResponse{}
	return &this
}

// NewAddMerchantResponseWithDefaults instantiates a new AddMerchantResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddMerchantResponseWithDefaults() *AddMerchantResponse {
	this := AddMerchantResponse{}
	return &this
}

// GetMerchantReferenceNumber returns the MerchantReferenceNumber field value if set, zero value otherwise.
func (o *AddMerchantResponse) GetMerchantReferenceNumber() string {
	if o == nil || o.MerchantReferenceNumber == nil {
		var ret string
		return ret
	}
	return *o.MerchantReferenceNumber
}

// GetMerchantReferenceNumberOk returns a tuple with the MerchantReferenceNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddMerchantResponse) GetMerchantReferenceNumberOk() (*string, bool) {
	if o == nil || o.MerchantReferenceNumber == nil {
		return nil, false
	}
	return o.MerchantReferenceNumber, true
}

// HasMerchantReferenceNumber returns a boolean if a field has been set.
func (o *AddMerchantResponse) HasMerchantReferenceNumber() bool {
	if o != nil && o.MerchantReferenceNumber != nil {
		return true
	}

	return false
}

// SetMerchantReferenceNumber gets a reference to the given string and assigns it to the MerchantReferenceNumber field.
func (o *AddMerchantResponse) SetMerchantReferenceNumber(v string) {
	o.MerchantReferenceNumber = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AddMerchantResponse) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddMerchantResponse) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AddMerchantResponse) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AddMerchantResponse) SetName(v string) {
	o.Name = &v
}

func (o AddMerchantResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MerchantReferenceNumber != nil {
		toSerialize["MerchantReferenceNumber"] = o.MerchantReferenceNumber
	}
	if o.Name != nil {
		toSerialize["Name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableAddMerchantResponse struct {
	value *AddMerchantResponse
	isSet bool
}

func (v NullableAddMerchantResponse) Get() *AddMerchantResponse {
	return v.value
}

func (v *NullableAddMerchantResponse) Set(val *AddMerchantResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAddMerchantResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAddMerchantResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddMerchantResponse(val *AddMerchantResponse) *NullableAddMerchantResponse {
	return &NullableAddMerchantResponse{value: val, isSet: true}
}

func (v NullableAddMerchantResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddMerchantResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


