/*
 * MATCH API
 *
 * Helps acquirers identify potentially high-risk merchants before entering to a merchant agreement.
 *
 * API version: 1.0.0
 * Contact: apisupport@mastercard.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package match

import (
	"encoding/json"
)

// ContactResponseSchema struct for ContactResponseSchema
type ContactResponseSchema struct {
	ContactResponse *ContactResponse `json:"ContactResponse,omitempty"`
}

// NewContactResponseSchema instantiates a new ContactResponseSchema object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContactResponseSchema() *ContactResponseSchema {
	this := ContactResponseSchema{}
	return &this
}

// NewContactResponseSchemaWithDefaults instantiates a new ContactResponseSchema object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContactResponseSchemaWithDefaults() *ContactResponseSchema {
	this := ContactResponseSchema{}
	return &this
}

// GetContactResponse returns the ContactResponse field value if set, zero value otherwise.
func (o *ContactResponseSchema) GetContactResponse() ContactResponse {
	if o == nil || o.ContactResponse == nil {
		var ret ContactResponse
		return ret
	}
	return *o.ContactResponse
}

// GetContactResponseOk returns a tuple with the ContactResponse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactResponseSchema) GetContactResponseOk() (*ContactResponse, bool) {
	if o == nil || o.ContactResponse == nil {
		return nil, false
	}
	return o.ContactResponse, true
}

// HasContactResponse returns a boolean if a field has been set.
func (o *ContactResponseSchema) HasContactResponse() bool {
	if o != nil && o.ContactResponse != nil {
		return true
	}

	return false
}

// SetContactResponse gets a reference to the given ContactResponse and assigns it to the ContactResponse field.
func (o *ContactResponseSchema) SetContactResponse(v ContactResponse) {
	o.ContactResponse = &v
}

func (o ContactResponseSchema) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ContactResponse != nil {
		toSerialize["ContactResponse"] = o.ContactResponse
	}
	return json.Marshal(toSerialize)
}

type NullableContactResponseSchema struct {
	value *ContactResponseSchema
	isSet bool
}

func (v NullableContactResponseSchema) Get() *ContactResponseSchema {
	return v.value
}

func (v *NullableContactResponseSchema) Set(val *ContactResponseSchema) {
	v.value = val
	v.isSet = true
}

func (v NullableContactResponseSchema) IsSet() bool {
	return v.isSet
}

func (v *NullableContactResponseSchema) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContactResponseSchema(val *ContactResponseSchema) *NullableContactResponseSchema {
	return &NullableContactResponseSchema{value: val, isSet: true}
}

func (v NullableContactResponseSchema) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContactResponseSchema) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


