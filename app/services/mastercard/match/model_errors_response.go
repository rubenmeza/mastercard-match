/*
 * MATCH API
 *
 * Helps acquirers identify potentially high-risk merchants before entering to a merchant agreement.
 *
 * API version: 1.0.0
 * Contact: apisupport@mastercard.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package match

import (
	"encoding/json"
)

// ErrorsResponse struct for ErrorsResponse
type ErrorsResponse struct {
	Errors Errors `json:"Errors"`
}

// NewErrorsResponse instantiates a new ErrorsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewErrorsResponse(errors Errors) *ErrorsResponse {
	this := ErrorsResponse{}
	this.Errors = errors
	return &this
}

// NewErrorsResponseWithDefaults instantiates a new ErrorsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewErrorsResponseWithDefaults() *ErrorsResponse {
	this := ErrorsResponse{}
	return &this
}

// GetErrors returns the Errors field value
func (o *ErrorsResponse) GetErrors() Errors {
	if o == nil {
		var ret Errors
		return ret
	}

	return o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value
// and a boolean to check if the value has been set.
func (o *ErrorsResponse) GetErrorsOk() (*Errors, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Errors, true
}

// SetErrors sets field value
func (o *ErrorsResponse) SetErrors(v Errors) {
	o.Errors = v
}

func (o ErrorsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["Errors"] = o.Errors
	}
	return json.Marshal(toSerialize)
}

type NullableErrorsResponse struct {
	value *ErrorsResponse
	isSet bool
}

func (v NullableErrorsResponse) Get() *ErrorsResponse {
	return v.value
}

func (v *NullableErrorsResponse) Set(val *ErrorsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableErrorsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableErrorsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableErrorsResponse(val *ErrorsResponse) *NullableErrorsResponse {
	return &NullableErrorsResponse{value: val, isSet: true}
}

func (v NullableErrorsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableErrorsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


