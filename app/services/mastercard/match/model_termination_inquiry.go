/*
 * MATCH API
 *
 * Helps acquirers identify potentially high-risk merchants before entering to a merchant agreement.
 *
 * API version: 1.0.0
 * Contact: apisupport@mastercard.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package match

import (
	"encoding/json"
)

// TerminationInquiry struct for TerminationInquiry
type TerminationInquiry struct {
	// PageOffset for the inquiry done
	PageOffset *int32 `json:"PageOffset,omitempty"`
	// rReference URL to get inquiry
	Ref *string `json:"Ref,omitempty"`
	// User-defined identifier for the inquiry submitted.
	TransactionReferenceNumber *string `json:"TransactionReferenceNumber,omitempty"`
	PossibleMerchantMatches *[]PossibleMerchantMatches `json:"PossibleMerchantMatches,omitempty"`
	PossibleInquiryMatches *[]PossibleInquiryMatches `json:"PossibleInquiryMatches,omitempty"`
}

// NewTerminationInquiry instantiates a new TerminationInquiry object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTerminationInquiry() *TerminationInquiry {
	this := TerminationInquiry{}
	return &this
}

// NewTerminationInquiryWithDefaults instantiates a new TerminationInquiry object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTerminationInquiryWithDefaults() *TerminationInquiry {
	this := TerminationInquiry{}
	return &this
}

// GetPageOffset returns the PageOffset field value if set, zero value otherwise.
func (o *TerminationInquiry) GetPageOffset() int32 {
	if o == nil || o.PageOffset == nil {
		var ret int32
		return ret
	}
	return *o.PageOffset
}

// GetPageOffsetOk returns a tuple with the PageOffset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TerminationInquiry) GetPageOffsetOk() (*int32, bool) {
	if o == nil || o.PageOffset == nil {
		return nil, false
	}
	return o.PageOffset, true
}

// HasPageOffset returns a boolean if a field has been set.
func (o *TerminationInquiry) HasPageOffset() bool {
	if o != nil && o.PageOffset != nil {
		return true
	}

	return false
}

// SetPageOffset gets a reference to the given int32 and assigns it to the PageOffset field.
func (o *TerminationInquiry) SetPageOffset(v int32) {
	o.PageOffset = &v
}

// GetRef returns the Ref field value if set, zero value otherwise.
func (o *TerminationInquiry) GetRef() string {
	if o == nil || o.Ref == nil {
		var ret string
		return ret
	}
	return *o.Ref
}

// GetRefOk returns a tuple with the Ref field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TerminationInquiry) GetRefOk() (*string, bool) {
	if o == nil || o.Ref == nil {
		return nil, false
	}
	return o.Ref, true
}

// HasRef returns a boolean if a field has been set.
func (o *TerminationInquiry) HasRef() bool {
	if o != nil && o.Ref != nil {
		return true
	}

	return false
}

// SetRef gets a reference to the given string and assigns it to the Ref field.
func (o *TerminationInquiry) SetRef(v string) {
	o.Ref = &v
}

// GetTransactionReferenceNumber returns the TransactionReferenceNumber field value if set, zero value otherwise.
func (o *TerminationInquiry) GetTransactionReferenceNumber() string {
	if o == nil || o.TransactionReferenceNumber == nil {
		var ret string
		return ret
	}
	return *o.TransactionReferenceNumber
}

// GetTransactionReferenceNumberOk returns a tuple with the TransactionReferenceNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TerminationInquiry) GetTransactionReferenceNumberOk() (*string, bool) {
	if o == nil || o.TransactionReferenceNumber == nil {
		return nil, false
	}
	return o.TransactionReferenceNumber, true
}

// HasTransactionReferenceNumber returns a boolean if a field has been set.
func (o *TerminationInquiry) HasTransactionReferenceNumber() bool {
	if o != nil && o.TransactionReferenceNumber != nil {
		return true
	}

	return false
}

// SetTransactionReferenceNumber gets a reference to the given string and assigns it to the TransactionReferenceNumber field.
func (o *TerminationInquiry) SetTransactionReferenceNumber(v string) {
	o.TransactionReferenceNumber = &v
}

// GetPossibleMerchantMatches returns the PossibleMerchantMatches field value if set, zero value otherwise.
func (o *TerminationInquiry) GetPossibleMerchantMatches() []PossibleMerchantMatches {
	if o == nil || o.PossibleMerchantMatches == nil {
		var ret []PossibleMerchantMatches
		return ret
	}
	return *o.PossibleMerchantMatches
}

// GetPossibleMerchantMatchesOk returns a tuple with the PossibleMerchantMatches field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TerminationInquiry) GetPossibleMerchantMatchesOk() (*[]PossibleMerchantMatches, bool) {
	if o == nil || o.PossibleMerchantMatches == nil {
		return nil, false
	}
	return o.PossibleMerchantMatches, true
}

// HasPossibleMerchantMatches returns a boolean if a field has been set.
func (o *TerminationInquiry) HasPossibleMerchantMatches() bool {
	if o != nil && o.PossibleMerchantMatches != nil {
		return true
	}

	return false
}

// SetPossibleMerchantMatches gets a reference to the given []PossibleMerchantMatches and assigns it to the PossibleMerchantMatches field.
func (o *TerminationInquiry) SetPossibleMerchantMatches(v []PossibleMerchantMatches) {
	o.PossibleMerchantMatches = &v
}

// GetPossibleInquiryMatches returns the PossibleInquiryMatches field value if set, zero value otherwise.
func (o *TerminationInquiry) GetPossibleInquiryMatches() []PossibleInquiryMatches {
	if o == nil || o.PossibleInquiryMatches == nil {
		var ret []PossibleInquiryMatches
		return ret
	}
	return *o.PossibleInquiryMatches
}

// GetPossibleInquiryMatchesOk returns a tuple with the PossibleInquiryMatches field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TerminationInquiry) GetPossibleInquiryMatchesOk() (*[]PossibleInquiryMatches, bool) {
	if o == nil || o.PossibleInquiryMatches == nil {
		return nil, false
	}
	return o.PossibleInquiryMatches, true
}

// HasPossibleInquiryMatches returns a boolean if a field has been set.
func (o *TerminationInquiry) HasPossibleInquiryMatches() bool {
	if o != nil && o.PossibleInquiryMatches != nil {
		return true
	}

	return false
}

// SetPossibleInquiryMatches gets a reference to the given []PossibleInquiryMatches and assigns it to the PossibleInquiryMatches field.
func (o *TerminationInquiry) SetPossibleInquiryMatches(v []PossibleInquiryMatches) {
	o.PossibleInquiryMatches = &v
}

func (o TerminationInquiry) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PageOffset != nil {
		toSerialize["PageOffset"] = o.PageOffset
	}
	if o.Ref != nil {
		toSerialize["Ref"] = o.Ref
	}
	if o.TransactionReferenceNumber != nil {
		toSerialize["TransactionReferenceNumber"] = o.TransactionReferenceNumber
	}
	if o.PossibleMerchantMatches != nil {
		toSerialize["PossibleMerchantMatches"] = o.PossibleMerchantMatches
	}
	if o.PossibleInquiryMatches != nil {
		toSerialize["PossibleInquiryMatches"] = o.PossibleInquiryMatches
	}
	return json.Marshal(toSerialize)
}

type NullableTerminationInquiry struct {
	value *TerminationInquiry
	isSet bool
}

func (v NullableTerminationInquiry) Get() *TerminationInquiry {
	return v.value
}

func (v *NullableTerminationInquiry) Set(val *TerminationInquiry) {
	v.value = val
	v.isSet = true
}

func (v NullableTerminationInquiry) IsSet() bool {
	return v.isSet
}

func (v *NullableTerminationInquiry) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTerminationInquiry(val *TerminationInquiry) *NullableTerminationInquiry {
	return &NullableTerminationInquiry{value: val, isSet: true}
}

func (v NullableTerminationInquiry) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTerminationInquiry) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


