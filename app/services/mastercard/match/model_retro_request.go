/*
 * MATCH API
 *
 * Helps acquirers identify potentially high-risk merchants before entering to a merchant agreement.
 *
 * API version: 1.0.0
 * Contact: apisupport@mastercard.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package match

import (
	"encoding/json"
)

// RetroRequest struct for RetroRequest
type RetroRequest struct {
	// The Acquirer Id for the retro summary to be fetched.
	AcquirerId *string `json:"AcquirerId,omitempty"`
}

// NewRetroRequest instantiates a new RetroRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRetroRequest() *RetroRequest {
	this := RetroRequest{}
	return &this
}

// NewRetroRequestWithDefaults instantiates a new RetroRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRetroRequestWithDefaults() *RetroRequest {
	this := RetroRequest{}
	return &this
}

// GetAcquirerId returns the AcquirerId field value if set, zero value otherwise.
func (o *RetroRequest) GetAcquirerId() string {
	if o == nil || o.AcquirerId == nil {
		var ret string
		return ret
	}
	return *o.AcquirerId
}

// GetAcquirerIdOk returns a tuple with the AcquirerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RetroRequest) GetAcquirerIdOk() (*string, bool) {
	if o == nil || o.AcquirerId == nil {
		return nil, false
	}
	return o.AcquirerId, true
}

// HasAcquirerId returns a boolean if a field has been set.
func (o *RetroRequest) HasAcquirerId() bool {
	if o != nil && o.AcquirerId != nil {
		return true
	}

	return false
}

// SetAcquirerId gets a reference to the given string and assigns it to the AcquirerId field.
func (o *RetroRequest) SetAcquirerId(v string) {
	o.AcquirerId = &v
}

func (o RetroRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AcquirerId != nil {
		toSerialize["AcquirerId"] = o.AcquirerId
	}
	return json.Marshal(toSerialize)
}

type NullableRetroRequest struct {
	value *RetroRequest
	isSet bool
}

func (v NullableRetroRequest) Get() *RetroRequest {
	return v.value
}

func (v *NullableRetroRequest) Set(val *RetroRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRetroRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRetroRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRetroRequest(val *RetroRequest) *NullableRetroRequest {
	return &NullableRetroRequest{value: val, isSet: true}
}

func (v NullableRetroRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRetroRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


