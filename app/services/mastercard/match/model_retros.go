/*
 * MATCH API
 *
 * Helps acquirers identify potentially high-risk merchants before entering to a merchant agreement.
 *
 * API version: 1.0.0
 * Contact: apisupport@mastercard.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package match

import (
	"encoding/json"
)

// Retros struct for Retros
type Retros struct {
	RetroactiveInquiryResults *[]Retro `json:"Retroactive-Inquiry-Results,omitempty"`
}

// NewRetros instantiates a new Retros object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRetros() *Retros {
	this := Retros{}
	return &this
}

// NewRetrosWithDefaults instantiates a new Retros object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRetrosWithDefaults() *Retros {
	this := Retros{}
	return &this
}

// GetRetroactiveInquiryResults returns the RetroactiveInquiryResults field value if set, zero value otherwise.
func (o *Retros) GetRetroactiveInquiryResults() []Retro {
	if o == nil || o.RetroactiveInquiryResults == nil {
		var ret []Retro
		return ret
	}
	return *o.RetroactiveInquiryResults
}

// GetRetroactiveInquiryResultsOk returns a tuple with the RetroactiveInquiryResults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Retros) GetRetroactiveInquiryResultsOk() (*[]Retro, bool) {
	if o == nil || o.RetroactiveInquiryResults == nil {
		return nil, false
	}
	return o.RetroactiveInquiryResults, true
}

// HasRetroactiveInquiryResults returns a boolean if a field has been set.
func (o *Retros) HasRetroactiveInquiryResults() bool {
	if o != nil && o.RetroactiveInquiryResults != nil {
		return true
	}

	return false
}

// SetRetroactiveInquiryResults gets a reference to the given []Retro and assigns it to the RetroactiveInquiryResults field.
func (o *Retros) SetRetroactiveInquiryResults(v []Retro) {
	o.RetroactiveInquiryResults = &v
}

func (o Retros) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.RetroactiveInquiryResults != nil {
		toSerialize["Retroactive-Inquiry-Results"] = o.RetroactiveInquiryResults
	}
	return json.Marshal(toSerialize)
}

type NullableRetros struct {
	value *Retros
	isSet bool
}

func (v NullableRetros) Get() *Retros {
	return v.value
}

func (v *NullableRetros) Set(val *Retros) {
	v.value = val
	v.isSet = true
}

func (v NullableRetros) IsSet() bool {
	return v.isSet
}

func (v *NullableRetros) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRetros(val *Retros) *NullableRetros {
	return &NullableRetros{value: val, isSet: true}
}

func (v NullableRetros) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRetros) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


