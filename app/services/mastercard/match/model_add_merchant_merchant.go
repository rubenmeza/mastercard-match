/*
 * MATCH API
 *
 * Helps acquirers identify potentially high-risk merchants before entering to a merchant agreement.
 *
 * API version: 1.0.0
 * Contact: apisupport@mastercard.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package match

import (
	"encoding/json"
)

// AddMerchantMerchant struct for AddMerchantMerchant
type AddMerchantMerchant struct {
	// The name of the Business which has been terminated.
	Name string `json:"Name"`
	// The name used by a merchant that could be different from the legal name of the business. Such as Bait R Us instead of the legal name, The Bait Shop
	DoingBusinessAsName *string `json:"DoingBusinessAsName,omitempty"`
	// The identifier assigned to a merchant by an Acquirer. An Acquirer Id and Merchant Id combination must be unique and Merchant Id should be less than 15 characters.
	MerchantId string `json:"MerchantId"`
	// A classification code used in authorization, clearing, and other transactions or reports to identify the type of merchant.
	MerchantCategory string `json:"MerchantCategory"`
	Address *Address `json:"Address,omitempty"`
	// The Business or Merchant's phone number.
	PhoneNumber string `json:"PhoneNumber"`
	// The Business or Merchant's alternate phone number.
	AltPhoneNumber *string `json:"AltPhoneNumber,omitempty"`
	// The National tax ID or business registration number. Return value will be hidden.
	NationalTaxId *string `json:"NationalTaxId,omitempty"`
	// The Merchant's state tax ID; for the U.S region only. Return value will be hidden.
	CountrySubdivisionTaxId *string `json:"CountrySubdivisionTaxId,omitempty"`
	// Cardholder-activated terminal indicator.
	CATFlag string `json:"CATFlag"`
	// Date the merchant entered into agreement with the acquirer
	DateOpened string `json:"DateOpened"`
	// Date the agreement was terminated with the merchant
	DateClosed string `json:"DateClosed"`
	// The name of the service provider associated with the merchant listed in the MATCH.
	ServiceProvLegal *string `json:"ServiceProvLegal,omitempty"`
	// The name of the service provider associated with the merchant listed in the MATCH.
	ServiceProvDBA *string `json:"ServiceProvDBA,omitempty"`
	// Website address of the merchant. A request may include multiple URLs . The total cumulative size of the URLs cannot exceed 20000 bytes.
	Url *[]string `json:"Url,omitempty"`
	Principal *[]Principal `json:"Principal,omitempty"`
	// A two digit numeric code indication why a particular merchant was terminated.  01   Account Data Compromise, 02   Common Points of Purchase, 03   Laundering, 04   Excessive Chargebacks, 05   Excessive Fraud, 06   Reserved for Future Use, 07   Fraud Conviction, 08   MasterCard Questionable Merchant Audit Program, 09   Bankruptcy/Liquidation/Insolvency, 10   Violation of MasterCard Standards, 11   Merchant collusion, 12   PCI Data Security Standard, Noncompliance, 13   Illegal Transactions, 14   Identity Theft
	ReasonCode string `json:"ReasonCode"`
	// Brief comments on why Merchant is added
	Comments *string `json:"Comments,omitempty"`
}

// NewAddMerchantMerchant instantiates a new AddMerchantMerchant object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddMerchantMerchant(name string, merchantId string, merchantCategory string, phoneNumber string, cATFlag string, dateOpened string, dateClosed string, reasonCode string) *AddMerchantMerchant {
	this := AddMerchantMerchant{}
	this.Name = name
	this.MerchantId = merchantId
	this.MerchantCategory = merchantCategory
	this.PhoneNumber = phoneNumber
	this.CATFlag = cATFlag
	this.DateOpened = dateOpened
	this.DateClosed = dateClosed
	this.ReasonCode = reasonCode
	return &this
}

// NewAddMerchantMerchantWithDefaults instantiates a new AddMerchantMerchant object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddMerchantMerchantWithDefaults() *AddMerchantMerchant {
	this := AddMerchantMerchant{}
	return &this
}

// GetName returns the Name field value
func (o *AddMerchantMerchant) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AddMerchantMerchant) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AddMerchantMerchant) SetName(v string) {
	o.Name = v
}

// GetDoingBusinessAsName returns the DoingBusinessAsName field value if set, zero value otherwise.
func (o *AddMerchantMerchant) GetDoingBusinessAsName() string {
	if o == nil || o.DoingBusinessAsName == nil {
		var ret string
		return ret
	}
	return *o.DoingBusinessAsName
}

// GetDoingBusinessAsNameOk returns a tuple with the DoingBusinessAsName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddMerchantMerchant) GetDoingBusinessAsNameOk() (*string, bool) {
	if o == nil || o.DoingBusinessAsName == nil {
		return nil, false
	}
	return o.DoingBusinessAsName, true
}

// HasDoingBusinessAsName returns a boolean if a field has been set.
func (o *AddMerchantMerchant) HasDoingBusinessAsName() bool {
	if o != nil && o.DoingBusinessAsName != nil {
		return true
	}

	return false
}

// SetDoingBusinessAsName gets a reference to the given string and assigns it to the DoingBusinessAsName field.
func (o *AddMerchantMerchant) SetDoingBusinessAsName(v string) {
	o.DoingBusinessAsName = &v
}

// GetMerchantId returns the MerchantId field value
func (o *AddMerchantMerchant) GetMerchantId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MerchantId
}

// GetMerchantIdOk returns a tuple with the MerchantId field value
// and a boolean to check if the value has been set.
func (o *AddMerchantMerchant) GetMerchantIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.MerchantId, true
}

// SetMerchantId sets field value
func (o *AddMerchantMerchant) SetMerchantId(v string) {
	o.MerchantId = v
}

// GetMerchantCategory returns the MerchantCategory field value
func (o *AddMerchantMerchant) GetMerchantCategory() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MerchantCategory
}

// GetMerchantCategoryOk returns a tuple with the MerchantCategory field value
// and a boolean to check if the value has been set.
func (o *AddMerchantMerchant) GetMerchantCategoryOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.MerchantCategory, true
}

// SetMerchantCategory sets field value
func (o *AddMerchantMerchant) SetMerchantCategory(v string) {
	o.MerchantCategory = v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *AddMerchantMerchant) GetAddress() Address {
	if o == nil || o.Address == nil {
		var ret Address
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddMerchantMerchant) GetAddressOk() (*Address, bool) {
	if o == nil || o.Address == nil {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *AddMerchantMerchant) HasAddress() bool {
	if o != nil && o.Address != nil {
		return true
	}

	return false
}

// SetAddress gets a reference to the given Address and assigns it to the Address field.
func (o *AddMerchantMerchant) SetAddress(v Address) {
	o.Address = &v
}

// GetPhoneNumber returns the PhoneNumber field value
func (o *AddMerchantMerchant) GetPhoneNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PhoneNumber
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value
// and a boolean to check if the value has been set.
func (o *AddMerchantMerchant) GetPhoneNumberOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.PhoneNumber, true
}

// SetPhoneNumber sets field value
func (o *AddMerchantMerchant) SetPhoneNumber(v string) {
	o.PhoneNumber = v
}

// GetAltPhoneNumber returns the AltPhoneNumber field value if set, zero value otherwise.
func (o *AddMerchantMerchant) GetAltPhoneNumber() string {
	if o == nil || o.AltPhoneNumber == nil {
		var ret string
		return ret
	}
	return *o.AltPhoneNumber
}

// GetAltPhoneNumberOk returns a tuple with the AltPhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddMerchantMerchant) GetAltPhoneNumberOk() (*string, bool) {
	if o == nil || o.AltPhoneNumber == nil {
		return nil, false
	}
	return o.AltPhoneNumber, true
}

// HasAltPhoneNumber returns a boolean if a field has been set.
func (o *AddMerchantMerchant) HasAltPhoneNumber() bool {
	if o != nil && o.AltPhoneNumber != nil {
		return true
	}

	return false
}

// SetAltPhoneNumber gets a reference to the given string and assigns it to the AltPhoneNumber field.
func (o *AddMerchantMerchant) SetAltPhoneNumber(v string) {
	o.AltPhoneNumber = &v
}

// GetNationalTaxId returns the NationalTaxId field value if set, zero value otherwise.
func (o *AddMerchantMerchant) GetNationalTaxId() string {
	if o == nil || o.NationalTaxId == nil {
		var ret string
		return ret
	}
	return *o.NationalTaxId
}

// GetNationalTaxIdOk returns a tuple with the NationalTaxId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddMerchantMerchant) GetNationalTaxIdOk() (*string, bool) {
	if o == nil || o.NationalTaxId == nil {
		return nil, false
	}
	return o.NationalTaxId, true
}

// HasNationalTaxId returns a boolean if a field has been set.
func (o *AddMerchantMerchant) HasNationalTaxId() bool {
	if o != nil && o.NationalTaxId != nil {
		return true
	}

	return false
}

// SetNationalTaxId gets a reference to the given string and assigns it to the NationalTaxId field.
func (o *AddMerchantMerchant) SetNationalTaxId(v string) {
	o.NationalTaxId = &v
}

// GetCountrySubdivisionTaxId returns the CountrySubdivisionTaxId field value if set, zero value otherwise.
func (o *AddMerchantMerchant) GetCountrySubdivisionTaxId() string {
	if o == nil || o.CountrySubdivisionTaxId == nil {
		var ret string
		return ret
	}
	return *o.CountrySubdivisionTaxId
}

// GetCountrySubdivisionTaxIdOk returns a tuple with the CountrySubdivisionTaxId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddMerchantMerchant) GetCountrySubdivisionTaxIdOk() (*string, bool) {
	if o == nil || o.CountrySubdivisionTaxId == nil {
		return nil, false
	}
	return o.CountrySubdivisionTaxId, true
}

// HasCountrySubdivisionTaxId returns a boolean if a field has been set.
func (o *AddMerchantMerchant) HasCountrySubdivisionTaxId() bool {
	if o != nil && o.CountrySubdivisionTaxId != nil {
		return true
	}

	return false
}

// SetCountrySubdivisionTaxId gets a reference to the given string and assigns it to the CountrySubdivisionTaxId field.
func (o *AddMerchantMerchant) SetCountrySubdivisionTaxId(v string) {
	o.CountrySubdivisionTaxId = &v
}

// GetCATFlag returns the CATFlag field value
func (o *AddMerchantMerchant) GetCATFlag() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CATFlag
}

// GetCATFlagOk returns a tuple with the CATFlag field value
// and a boolean to check if the value has been set.
func (o *AddMerchantMerchant) GetCATFlagOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CATFlag, true
}

// SetCATFlag sets field value
func (o *AddMerchantMerchant) SetCATFlag(v string) {
	o.CATFlag = v
}

// GetDateOpened returns the DateOpened field value
func (o *AddMerchantMerchant) GetDateOpened() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DateOpened
}

// GetDateOpenedOk returns a tuple with the DateOpened field value
// and a boolean to check if the value has been set.
func (o *AddMerchantMerchant) GetDateOpenedOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.DateOpened, true
}

// SetDateOpened sets field value
func (o *AddMerchantMerchant) SetDateOpened(v string) {
	o.DateOpened = v
}

// GetDateClosed returns the DateClosed field value
func (o *AddMerchantMerchant) GetDateClosed() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DateClosed
}

// GetDateClosedOk returns a tuple with the DateClosed field value
// and a boolean to check if the value has been set.
func (o *AddMerchantMerchant) GetDateClosedOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.DateClosed, true
}

// SetDateClosed sets field value
func (o *AddMerchantMerchant) SetDateClosed(v string) {
	o.DateClosed = v
}

// GetServiceProvLegal returns the ServiceProvLegal field value if set, zero value otherwise.
func (o *AddMerchantMerchant) GetServiceProvLegal() string {
	if o == nil || o.ServiceProvLegal == nil {
		var ret string
		return ret
	}
	return *o.ServiceProvLegal
}

// GetServiceProvLegalOk returns a tuple with the ServiceProvLegal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddMerchantMerchant) GetServiceProvLegalOk() (*string, bool) {
	if o == nil || o.ServiceProvLegal == nil {
		return nil, false
	}
	return o.ServiceProvLegal, true
}

// HasServiceProvLegal returns a boolean if a field has been set.
func (o *AddMerchantMerchant) HasServiceProvLegal() bool {
	if o != nil && o.ServiceProvLegal != nil {
		return true
	}

	return false
}

// SetServiceProvLegal gets a reference to the given string and assigns it to the ServiceProvLegal field.
func (o *AddMerchantMerchant) SetServiceProvLegal(v string) {
	o.ServiceProvLegal = &v
}

// GetServiceProvDBA returns the ServiceProvDBA field value if set, zero value otherwise.
func (o *AddMerchantMerchant) GetServiceProvDBA() string {
	if o == nil || o.ServiceProvDBA == nil {
		var ret string
		return ret
	}
	return *o.ServiceProvDBA
}

// GetServiceProvDBAOk returns a tuple with the ServiceProvDBA field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddMerchantMerchant) GetServiceProvDBAOk() (*string, bool) {
	if o == nil || o.ServiceProvDBA == nil {
		return nil, false
	}
	return o.ServiceProvDBA, true
}

// HasServiceProvDBA returns a boolean if a field has been set.
func (o *AddMerchantMerchant) HasServiceProvDBA() bool {
	if o != nil && o.ServiceProvDBA != nil {
		return true
	}

	return false
}

// SetServiceProvDBA gets a reference to the given string and assigns it to the ServiceProvDBA field.
func (o *AddMerchantMerchant) SetServiceProvDBA(v string) {
	o.ServiceProvDBA = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *AddMerchantMerchant) GetUrl() []string {
	if o == nil || o.Url == nil {
		var ret []string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddMerchantMerchant) GetUrlOk() (*[]string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *AddMerchantMerchant) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given []string and assigns it to the Url field.
func (o *AddMerchantMerchant) SetUrl(v []string) {
	o.Url = &v
}

// GetPrincipal returns the Principal field value if set, zero value otherwise.
func (o *AddMerchantMerchant) GetPrincipal() []Principal {
	if o == nil || o.Principal == nil {
		var ret []Principal
		return ret
	}
	return *o.Principal
}

// GetPrincipalOk returns a tuple with the Principal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddMerchantMerchant) GetPrincipalOk() (*[]Principal, bool) {
	if o == nil || o.Principal == nil {
		return nil, false
	}
	return o.Principal, true
}

// HasPrincipal returns a boolean if a field has been set.
func (o *AddMerchantMerchant) HasPrincipal() bool {
	if o != nil && o.Principal != nil {
		return true
	}

	return false
}

// SetPrincipal gets a reference to the given []Principal and assigns it to the Principal field.
func (o *AddMerchantMerchant) SetPrincipal(v []Principal) {
	o.Principal = &v
}

// GetReasonCode returns the ReasonCode field value
func (o *AddMerchantMerchant) GetReasonCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReasonCode
}

// GetReasonCodeOk returns a tuple with the ReasonCode field value
// and a boolean to check if the value has been set.
func (o *AddMerchantMerchant) GetReasonCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ReasonCode, true
}

// SetReasonCode sets field value
func (o *AddMerchantMerchant) SetReasonCode(v string) {
	o.ReasonCode = v
}

// GetComments returns the Comments field value if set, zero value otherwise.
func (o *AddMerchantMerchant) GetComments() string {
	if o == nil || o.Comments == nil {
		var ret string
		return ret
	}
	return *o.Comments
}

// GetCommentsOk returns a tuple with the Comments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddMerchantMerchant) GetCommentsOk() (*string, bool) {
	if o == nil || o.Comments == nil {
		return nil, false
	}
	return o.Comments, true
}

// HasComments returns a boolean if a field has been set.
func (o *AddMerchantMerchant) HasComments() bool {
	if o != nil && o.Comments != nil {
		return true
	}

	return false
}

// SetComments gets a reference to the given string and assigns it to the Comments field.
func (o *AddMerchantMerchant) SetComments(v string) {
	o.Comments = &v
}

func (o AddMerchantMerchant) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["Name"] = o.Name
	}
	if o.DoingBusinessAsName != nil {
		toSerialize["DoingBusinessAsName"] = o.DoingBusinessAsName
	}
	if true {
		toSerialize["MerchantId"] = o.MerchantId
	}
	if true {
		toSerialize["MerchantCategory"] = o.MerchantCategory
	}
	if o.Address != nil {
		toSerialize["Address"] = o.Address
	}
	if true {
		toSerialize["PhoneNumber"] = o.PhoneNumber
	}
	if o.AltPhoneNumber != nil {
		toSerialize["AltPhoneNumber"] = o.AltPhoneNumber
	}
	if o.NationalTaxId != nil {
		toSerialize["NationalTaxId"] = o.NationalTaxId
	}
	if o.CountrySubdivisionTaxId != nil {
		toSerialize["CountrySubdivisionTaxId"] = o.CountrySubdivisionTaxId
	}
	if true {
		toSerialize["CATFlag"] = o.CATFlag
	}
	if true {
		toSerialize["DateOpened"] = o.DateOpened
	}
	if true {
		toSerialize["DateClosed"] = o.DateClosed
	}
	if o.ServiceProvLegal != nil {
		toSerialize["ServiceProvLegal"] = o.ServiceProvLegal
	}
	if o.ServiceProvDBA != nil {
		toSerialize["ServiceProvDBA"] = o.ServiceProvDBA
	}
	if o.Url != nil {
		toSerialize["Url"] = o.Url
	}
	if o.Principal != nil {
		toSerialize["Principal"] = o.Principal
	}
	if true {
		toSerialize["ReasonCode"] = o.ReasonCode
	}
	if o.Comments != nil {
		toSerialize["Comments"] = o.Comments
	}
	return json.Marshal(toSerialize)
}

type NullableAddMerchantMerchant struct {
	value *AddMerchantMerchant
	isSet bool
}

func (v NullableAddMerchantMerchant) Get() *AddMerchantMerchant {
	return v.value
}

func (v *NullableAddMerchantMerchant) Set(val *AddMerchantMerchant) {
	v.value = val
	v.isSet = true
}

func (v NullableAddMerchantMerchant) IsSet() bool {
	return v.isSet
}

func (v *NullableAddMerchantMerchant) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddMerchantMerchant(val *AddMerchantMerchant) *NullableAddMerchantMerchant {
	return &NullableAddMerchantMerchant{value: val, isSet: true}
}

func (v NullableAddMerchantMerchant) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddMerchantMerchant) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


