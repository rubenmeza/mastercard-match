/*
 * MATCH API
 *
 * Helps acquirers identify potentially high-risk merchants before entering to a merchant agreement.
 *
 * API version: 1.0.0
 * Contact: apisupport@mastercard.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package match

import (
	"encoding/json"
)

// PossibleMerchantMatches struct for PossibleMerchantMatches
type PossibleMerchantMatches struct {
	// The total length of the result set from possible merchant matches of inquiry.
	TotalLength *int32 `json:"TotalLength,omitempty"`
	TerminatedMerchant *[]TerminatedMerchant `json:"TerminatedMerchant,omitempty"`
}

// NewPossibleMerchantMatches instantiates a new PossibleMerchantMatches object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPossibleMerchantMatches() *PossibleMerchantMatches {
	this := PossibleMerchantMatches{}
	return &this
}

// NewPossibleMerchantMatchesWithDefaults instantiates a new PossibleMerchantMatches object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPossibleMerchantMatchesWithDefaults() *PossibleMerchantMatches {
	this := PossibleMerchantMatches{}
	return &this
}

// GetTotalLength returns the TotalLength field value if set, zero value otherwise.
func (o *PossibleMerchantMatches) GetTotalLength() int32 {
	if o == nil || o.TotalLength == nil {
		var ret int32
		return ret
	}
	return *o.TotalLength
}

// GetTotalLengthOk returns a tuple with the TotalLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PossibleMerchantMatches) GetTotalLengthOk() (*int32, bool) {
	if o == nil || o.TotalLength == nil {
		return nil, false
	}
	return o.TotalLength, true
}

// HasTotalLength returns a boolean if a field has been set.
func (o *PossibleMerchantMatches) HasTotalLength() bool {
	if o != nil && o.TotalLength != nil {
		return true
	}

	return false
}

// SetTotalLength gets a reference to the given int32 and assigns it to the TotalLength field.
func (o *PossibleMerchantMatches) SetTotalLength(v int32) {
	o.TotalLength = &v
}

// GetTerminatedMerchant returns the TerminatedMerchant field value if set, zero value otherwise.
func (o *PossibleMerchantMatches) GetTerminatedMerchant() []TerminatedMerchant {
	if o == nil || o.TerminatedMerchant == nil {
		var ret []TerminatedMerchant
		return ret
	}
	return *o.TerminatedMerchant
}

// GetTerminatedMerchantOk returns a tuple with the TerminatedMerchant field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PossibleMerchantMatches) GetTerminatedMerchantOk() (*[]TerminatedMerchant, bool) {
	if o == nil || o.TerminatedMerchant == nil {
		return nil, false
	}
	return o.TerminatedMerchant, true
}

// HasTerminatedMerchant returns a boolean if a field has been set.
func (o *PossibleMerchantMatches) HasTerminatedMerchant() bool {
	if o != nil && o.TerminatedMerchant != nil {
		return true
	}

	return false
}

// SetTerminatedMerchant gets a reference to the given []TerminatedMerchant and assigns it to the TerminatedMerchant field.
func (o *PossibleMerchantMatches) SetTerminatedMerchant(v []TerminatedMerchant) {
	o.TerminatedMerchant = &v
}

func (o PossibleMerchantMatches) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TotalLength != nil {
		toSerialize["TotalLength"] = o.TotalLength
	}
	if o.TerminatedMerchant != nil {
		toSerialize["TerminatedMerchant"] = o.TerminatedMerchant
	}
	return json.Marshal(toSerialize)
}

type NullablePossibleMerchantMatches struct {
	value *PossibleMerchantMatches
	isSet bool
}

func (v NullablePossibleMerchantMatches) Get() *PossibleMerchantMatches {
	return v.value
}

func (v *NullablePossibleMerchantMatches) Set(val *PossibleMerchantMatches) {
	v.value = val
	v.isSet = true
}

func (v NullablePossibleMerchantMatches) IsSet() bool {
	return v.isSet
}

func (v *NullablePossibleMerchantMatches) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePossibleMerchantMatches(val *PossibleMerchantMatches) *NullablePossibleMerchantMatches {
	return &NullablePossibleMerchantMatches{value: val, isSet: true}
}

func (v NullablePossibleMerchantMatches) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePossibleMerchantMatches) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


