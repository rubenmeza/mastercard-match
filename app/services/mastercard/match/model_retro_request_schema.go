/*
 * MATCH API
 *
 * Helps acquirers identify potentially high-risk merchants before entering to a merchant agreement.
 *
 * API version: 1.0.0
 * Contact: apisupport@mastercard.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package match

import (
	"encoding/json"
)

// RetroRequestSchema struct for RetroRequestSchema
type RetroRequestSchema struct {
	RetroRequest *RetroRequest `json:"RetroRequest,omitempty"`
}

// NewRetroRequestSchema instantiates a new RetroRequestSchema object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRetroRequestSchema() *RetroRequestSchema {
	this := RetroRequestSchema{}
	return &this
}

// NewRetroRequestSchemaWithDefaults instantiates a new RetroRequestSchema object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRetroRequestSchemaWithDefaults() *RetroRequestSchema {
	this := RetroRequestSchema{}
	return &this
}

// GetRetroRequest returns the RetroRequest field value if set, zero value otherwise.
func (o *RetroRequestSchema) GetRetroRequest() RetroRequest {
	if o == nil || o.RetroRequest == nil {
		var ret RetroRequest
		return ret
	}
	return *o.RetroRequest
}

// GetRetroRequestOk returns a tuple with the RetroRequest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RetroRequestSchema) GetRetroRequestOk() (*RetroRequest, bool) {
	if o == nil || o.RetroRequest == nil {
		return nil, false
	}
	return o.RetroRequest, true
}

// HasRetroRequest returns a boolean if a field has been set.
func (o *RetroRequestSchema) HasRetroRequest() bool {
	if o != nil && o.RetroRequest != nil {
		return true
	}

	return false
}

// SetRetroRequest gets a reference to the given RetroRequest and assigns it to the RetroRequest field.
func (o *RetroRequestSchema) SetRetroRequest(v RetroRequest) {
	o.RetroRequest = &v
}

func (o RetroRequestSchema) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.RetroRequest != nil {
		toSerialize["RetroRequest"] = o.RetroRequest
	}
	return json.Marshal(toSerialize)
}

type NullableRetroRequestSchema struct {
	value *RetroRequestSchema
	isSet bool
}

func (v NullableRetroRequestSchema) Get() *RetroRequestSchema {
	return v.value
}

func (v *NullableRetroRequestSchema) Set(val *RetroRequestSchema) {
	v.value = val
	v.isSet = true
}

func (v NullableRetroRequestSchema) IsSet() bool {
	return v.isSet
}

func (v *NullableRetroRequestSchema) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRetroRequestSchema(val *RetroRequestSchema) *NullableRetroRequestSchema {
	return &NullableRetroRequestSchema{value: val, isSet: true}
}

func (v NullableRetroRequestSchema) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRetroRequestSchema) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


