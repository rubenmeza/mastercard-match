/*
 * MATCH API
 *
 * Helps acquirers identify potentially high-risk merchants before entering to a merchant agreement.
 *
 * API version: 1.0.0
 * Contact: apisupport@mastercard.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package match

import (
	"encoding/json"
)

// RetroResponseSchema struct for RetroResponseSchema
type RetroResponseSchema struct {
	RetroResponse *Retros `json:"RetroResponse,omitempty"`
}

// NewRetroResponseSchema instantiates a new RetroResponseSchema object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRetroResponseSchema() *RetroResponseSchema {
	this := RetroResponseSchema{}
	return &this
}

// NewRetroResponseSchemaWithDefaults instantiates a new RetroResponseSchema object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRetroResponseSchemaWithDefaults() *RetroResponseSchema {
	this := RetroResponseSchema{}
	return &this
}

// GetRetroResponse returns the RetroResponse field value if set, zero value otherwise.
func (o *RetroResponseSchema) GetRetroResponse() Retros {
	if o == nil || o.RetroResponse == nil {
		var ret Retros
		return ret
	}
	return *o.RetroResponse
}

// GetRetroResponseOk returns a tuple with the RetroResponse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RetroResponseSchema) GetRetroResponseOk() (*Retros, bool) {
	if o == nil || o.RetroResponse == nil {
		return nil, false
	}
	return o.RetroResponse, true
}

// HasRetroResponse returns a boolean if a field has been set.
func (o *RetroResponseSchema) HasRetroResponse() bool {
	if o != nil && o.RetroResponse != nil {
		return true
	}

	return false
}

// SetRetroResponse gets a reference to the given Retros and assigns it to the RetroResponse field.
func (o *RetroResponseSchema) SetRetroResponse(v Retros) {
	o.RetroResponse = &v
}

func (o RetroResponseSchema) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.RetroResponse != nil {
		toSerialize["RetroResponse"] = o.RetroResponse
	}
	return json.Marshal(toSerialize)
}

type NullableRetroResponseSchema struct {
	value *RetroResponseSchema
	isSet bool
}

func (v NullableRetroResponseSchema) Get() *RetroResponseSchema {
	return v.value
}

func (v *NullableRetroResponseSchema) Set(val *RetroResponseSchema) {
	v.value = val
	v.isSet = true
}

func (v NullableRetroResponseSchema) IsSet() bool {
	return v.isSet
}

func (v *NullableRetroResponseSchema) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRetroResponseSchema(val *RetroResponseSchema) *NullableRetroResponseSchema {
	return &NullableRetroResponseSchema{value: val, isSet: true}
}

func (v NullableRetroResponseSchema) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRetroResponseSchema) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


