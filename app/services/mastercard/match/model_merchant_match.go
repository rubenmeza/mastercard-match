/*
 * MATCH API
 *
 * Helps acquirers identify potentially high-risk merchants before entering to a merchant agreement.
 *
 * API version: 1.0.0
 * Contact: apisupport@mastercard.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package match

import (
	"encoding/json"
)

// MerchantMatch struct for MerchantMatch
type MerchantMatch struct {
	// The name of the Business which has been terminated.
	Name *string `json:"Name,omitempty"`
	// The name used by a merchant that could be different from the legal name of the business. Such as Bait R Us instead of the legal name, The Bait Shop
	DoingBusinessAsName *string `json:"DoingBusinessAsName,omitempty"`
	// The Business or Merchant's phone number.
	PhoneNumber *string `json:"PhoneNumber,omitempty"`
	// Address of the merchant location
	Address *string `json:"Address,omitempty"`
	// The Business or Merchant's alternate phone number.
	AltPhoneNumber *string `json:"AltPhoneNumber,omitempty"`
	// The Merchant's state tax ID; for the U.S region only. Return value will be hidden.
	CountrySubdivisionTaxId *string `json:"CountrySubdivisionTaxId,omitempty"`
	// The National tax ID or business registration number. Return value will be hidden.
	NationalTaxId *string `json:"NationalTaxId,omitempty"`
	// The name of the service provider associated with the merchant listed in the MATCH.
	ServiceProvLegal *string `json:"ServiceProvLegal,omitempty"`
	// The name of the service provider associated with the merchant listed in the MATCH.
	ServiceProvDBA *string `json:"ServiceProvDBA,omitempty"`
	PrincipalMatch *[]PrincipalMatch `json:"PrincipalMatch,omitempty"`
	UrlMatch *[]UrlMatch `json:"UrlMatch,omitempty"`
}

// NewMerchantMatch instantiates a new MerchantMatch object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMerchantMatch() *MerchantMatch {
	this := MerchantMatch{}
	return &this
}

// NewMerchantMatchWithDefaults instantiates a new MerchantMatch object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMerchantMatchWithDefaults() *MerchantMatch {
	this := MerchantMatch{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *MerchantMatch) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantMatch) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *MerchantMatch) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *MerchantMatch) SetName(v string) {
	o.Name = &v
}

// GetDoingBusinessAsName returns the DoingBusinessAsName field value if set, zero value otherwise.
func (o *MerchantMatch) GetDoingBusinessAsName() string {
	if o == nil || o.DoingBusinessAsName == nil {
		var ret string
		return ret
	}
	return *o.DoingBusinessAsName
}

// GetDoingBusinessAsNameOk returns a tuple with the DoingBusinessAsName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantMatch) GetDoingBusinessAsNameOk() (*string, bool) {
	if o == nil || o.DoingBusinessAsName == nil {
		return nil, false
	}
	return o.DoingBusinessAsName, true
}

// HasDoingBusinessAsName returns a boolean if a field has been set.
func (o *MerchantMatch) HasDoingBusinessAsName() bool {
	if o != nil && o.DoingBusinessAsName != nil {
		return true
	}

	return false
}

// SetDoingBusinessAsName gets a reference to the given string and assigns it to the DoingBusinessAsName field.
func (o *MerchantMatch) SetDoingBusinessAsName(v string) {
	o.DoingBusinessAsName = &v
}

// GetPhoneNumber returns the PhoneNumber field value if set, zero value otherwise.
func (o *MerchantMatch) GetPhoneNumber() string {
	if o == nil || o.PhoneNumber == nil {
		var ret string
		return ret
	}
	return *o.PhoneNumber
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantMatch) GetPhoneNumberOk() (*string, bool) {
	if o == nil || o.PhoneNumber == nil {
		return nil, false
	}
	return o.PhoneNumber, true
}

// HasPhoneNumber returns a boolean if a field has been set.
func (o *MerchantMatch) HasPhoneNumber() bool {
	if o != nil && o.PhoneNumber != nil {
		return true
	}

	return false
}

// SetPhoneNumber gets a reference to the given string and assigns it to the PhoneNumber field.
func (o *MerchantMatch) SetPhoneNumber(v string) {
	o.PhoneNumber = &v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *MerchantMatch) GetAddress() string {
	if o == nil || o.Address == nil {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantMatch) GetAddressOk() (*string, bool) {
	if o == nil || o.Address == nil {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *MerchantMatch) HasAddress() bool {
	if o != nil && o.Address != nil {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *MerchantMatch) SetAddress(v string) {
	o.Address = &v
}

// GetAltPhoneNumber returns the AltPhoneNumber field value if set, zero value otherwise.
func (o *MerchantMatch) GetAltPhoneNumber() string {
	if o == nil || o.AltPhoneNumber == nil {
		var ret string
		return ret
	}
	return *o.AltPhoneNumber
}

// GetAltPhoneNumberOk returns a tuple with the AltPhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantMatch) GetAltPhoneNumberOk() (*string, bool) {
	if o == nil || o.AltPhoneNumber == nil {
		return nil, false
	}
	return o.AltPhoneNumber, true
}

// HasAltPhoneNumber returns a boolean if a field has been set.
func (o *MerchantMatch) HasAltPhoneNumber() bool {
	if o != nil && o.AltPhoneNumber != nil {
		return true
	}

	return false
}

// SetAltPhoneNumber gets a reference to the given string and assigns it to the AltPhoneNumber field.
func (o *MerchantMatch) SetAltPhoneNumber(v string) {
	o.AltPhoneNumber = &v
}

// GetCountrySubdivisionTaxId returns the CountrySubdivisionTaxId field value if set, zero value otherwise.
func (o *MerchantMatch) GetCountrySubdivisionTaxId() string {
	if o == nil || o.CountrySubdivisionTaxId == nil {
		var ret string
		return ret
	}
	return *o.CountrySubdivisionTaxId
}

// GetCountrySubdivisionTaxIdOk returns a tuple with the CountrySubdivisionTaxId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantMatch) GetCountrySubdivisionTaxIdOk() (*string, bool) {
	if o == nil || o.CountrySubdivisionTaxId == nil {
		return nil, false
	}
	return o.CountrySubdivisionTaxId, true
}

// HasCountrySubdivisionTaxId returns a boolean if a field has been set.
func (o *MerchantMatch) HasCountrySubdivisionTaxId() bool {
	if o != nil && o.CountrySubdivisionTaxId != nil {
		return true
	}

	return false
}

// SetCountrySubdivisionTaxId gets a reference to the given string and assigns it to the CountrySubdivisionTaxId field.
func (o *MerchantMatch) SetCountrySubdivisionTaxId(v string) {
	o.CountrySubdivisionTaxId = &v
}

// GetNationalTaxId returns the NationalTaxId field value if set, zero value otherwise.
func (o *MerchantMatch) GetNationalTaxId() string {
	if o == nil || o.NationalTaxId == nil {
		var ret string
		return ret
	}
	return *o.NationalTaxId
}

// GetNationalTaxIdOk returns a tuple with the NationalTaxId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantMatch) GetNationalTaxIdOk() (*string, bool) {
	if o == nil || o.NationalTaxId == nil {
		return nil, false
	}
	return o.NationalTaxId, true
}

// HasNationalTaxId returns a boolean if a field has been set.
func (o *MerchantMatch) HasNationalTaxId() bool {
	if o != nil && o.NationalTaxId != nil {
		return true
	}

	return false
}

// SetNationalTaxId gets a reference to the given string and assigns it to the NationalTaxId field.
func (o *MerchantMatch) SetNationalTaxId(v string) {
	o.NationalTaxId = &v
}

// GetServiceProvLegal returns the ServiceProvLegal field value if set, zero value otherwise.
func (o *MerchantMatch) GetServiceProvLegal() string {
	if o == nil || o.ServiceProvLegal == nil {
		var ret string
		return ret
	}
	return *o.ServiceProvLegal
}

// GetServiceProvLegalOk returns a tuple with the ServiceProvLegal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantMatch) GetServiceProvLegalOk() (*string, bool) {
	if o == nil || o.ServiceProvLegal == nil {
		return nil, false
	}
	return o.ServiceProvLegal, true
}

// HasServiceProvLegal returns a boolean if a field has been set.
func (o *MerchantMatch) HasServiceProvLegal() bool {
	if o != nil && o.ServiceProvLegal != nil {
		return true
	}

	return false
}

// SetServiceProvLegal gets a reference to the given string and assigns it to the ServiceProvLegal field.
func (o *MerchantMatch) SetServiceProvLegal(v string) {
	o.ServiceProvLegal = &v
}

// GetServiceProvDBA returns the ServiceProvDBA field value if set, zero value otherwise.
func (o *MerchantMatch) GetServiceProvDBA() string {
	if o == nil || o.ServiceProvDBA == nil {
		var ret string
		return ret
	}
	return *o.ServiceProvDBA
}

// GetServiceProvDBAOk returns a tuple with the ServiceProvDBA field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantMatch) GetServiceProvDBAOk() (*string, bool) {
	if o == nil || o.ServiceProvDBA == nil {
		return nil, false
	}
	return o.ServiceProvDBA, true
}

// HasServiceProvDBA returns a boolean if a field has been set.
func (o *MerchantMatch) HasServiceProvDBA() bool {
	if o != nil && o.ServiceProvDBA != nil {
		return true
	}

	return false
}

// SetServiceProvDBA gets a reference to the given string and assigns it to the ServiceProvDBA field.
func (o *MerchantMatch) SetServiceProvDBA(v string) {
	o.ServiceProvDBA = &v
}

// GetPrincipalMatch returns the PrincipalMatch field value if set, zero value otherwise.
func (o *MerchantMatch) GetPrincipalMatch() []PrincipalMatch {
	if o == nil || o.PrincipalMatch == nil {
		var ret []PrincipalMatch
		return ret
	}
	return *o.PrincipalMatch
}

// GetPrincipalMatchOk returns a tuple with the PrincipalMatch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantMatch) GetPrincipalMatchOk() (*[]PrincipalMatch, bool) {
	if o == nil || o.PrincipalMatch == nil {
		return nil, false
	}
	return o.PrincipalMatch, true
}

// HasPrincipalMatch returns a boolean if a field has been set.
func (o *MerchantMatch) HasPrincipalMatch() bool {
	if o != nil && o.PrincipalMatch != nil {
		return true
	}

	return false
}

// SetPrincipalMatch gets a reference to the given []PrincipalMatch and assigns it to the PrincipalMatch field.
func (o *MerchantMatch) SetPrincipalMatch(v []PrincipalMatch) {
	o.PrincipalMatch = &v
}

// GetUrlMatch returns the UrlMatch field value if set, zero value otherwise.
func (o *MerchantMatch) GetUrlMatch() []UrlMatch {
	if o == nil || o.UrlMatch == nil {
		var ret []UrlMatch
		return ret
	}
	return *o.UrlMatch
}

// GetUrlMatchOk returns a tuple with the UrlMatch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantMatch) GetUrlMatchOk() (*[]UrlMatch, bool) {
	if o == nil || o.UrlMatch == nil {
		return nil, false
	}
	return o.UrlMatch, true
}

// HasUrlMatch returns a boolean if a field has been set.
func (o *MerchantMatch) HasUrlMatch() bool {
	if o != nil && o.UrlMatch != nil {
		return true
	}

	return false
}

// SetUrlMatch gets a reference to the given []UrlMatch and assigns it to the UrlMatch field.
func (o *MerchantMatch) SetUrlMatch(v []UrlMatch) {
	o.UrlMatch = &v
}

func (o MerchantMatch) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["Name"] = o.Name
	}
	if o.DoingBusinessAsName != nil {
		toSerialize["DoingBusinessAsName"] = o.DoingBusinessAsName
	}
	if o.PhoneNumber != nil {
		toSerialize["PhoneNumber"] = o.PhoneNumber
	}
	if o.Address != nil {
		toSerialize["Address"] = o.Address
	}
	if o.AltPhoneNumber != nil {
		toSerialize["AltPhoneNumber"] = o.AltPhoneNumber
	}
	if o.CountrySubdivisionTaxId != nil {
		toSerialize["CountrySubdivisionTaxId"] = o.CountrySubdivisionTaxId
	}
	if o.NationalTaxId != nil {
		toSerialize["NationalTaxId"] = o.NationalTaxId
	}
	if o.ServiceProvLegal != nil {
		toSerialize["ServiceProvLegal"] = o.ServiceProvLegal
	}
	if o.ServiceProvDBA != nil {
		toSerialize["ServiceProvDBA"] = o.ServiceProvDBA
	}
	if o.PrincipalMatch != nil {
		toSerialize["PrincipalMatch"] = o.PrincipalMatch
	}
	if o.UrlMatch != nil {
		toSerialize["UrlMatch"] = o.UrlMatch
	}
	return json.Marshal(toSerialize)
}

type NullableMerchantMatch struct {
	value *MerchantMatch
	isSet bool
}

func (v NullableMerchantMatch) Get() *MerchantMatch {
	return v.value
}

func (v *NullableMerchantMatch) Set(val *MerchantMatch) {
	v.value = val
	v.isSet = true
}

func (v NullableMerchantMatch) IsSet() bool {
	return v.isSet
}

func (v *NullableMerchantMatch) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMerchantMatch(val *MerchantMatch) *NullableMerchantMatch {
	return &NullableMerchantMatch{value: val, isSet: true}
}

func (v NullableMerchantMatch) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMerchantMatch) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


